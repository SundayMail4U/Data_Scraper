{"version":3,"sources":["./src/app/backend-apis.service.ts","./src/environments/environment.ts","./src/app/dashboard/dashboard.component.ts","./src/app/dashboard/dashboard.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/app-routing.module.ts","./src/app/main/main.component.ts","./src/app/main/main.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import {EventEmitter, Injectable} from '@angular/core';\r\nimport {HttpClient} from \"@angular/common/http\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class BackendApisService {\r\n\r\n  constructor(private http:HttpClient) { }\r\n\r\n  response:string = ''\r\n  responseUpdated:EventEmitter<string> = new EventEmitter<string>()\r\n\r\n  getTwitterAPI():Promise<any>{\r\n    console.log(\"About to call Twitter API\")\r\n\r\n    return this.http.get('/twitter',{responseType: 'text'}).\r\n    toPromise()\r\n      .then(response => {\r\n        this.response = response as string\r\n        this.responseUpdated.emit(this.response)\r\n      })\r\n\r\n    console.log(\"Called Twitter API\")\r\n  }\r\n\r\n  getRedditAPI():Promise<any>{\r\n    console.log(\"About to call Reddit API\")\r\n\r\n    return this.http.get('/reddit',{responseType: 'text'}).\r\n    toPromise()\r\n    .then(response => {\r\n        this.response = response as string\r\n        this.responseUpdated.emit(this.response)\r\n      })\r\n\r\n    console.log(\"Called Reddit API\")\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import {Component, Input, OnInit} from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.css']\r\n\r\n\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>We are in dashboard!</p>\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'angular-flask';\r\n}\r\n","<app-main></app-main>\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule} from \"@angular/forms\";\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { MainComponent } from './main/main.component';\r\nimport { DashboardComponent } from './dashboard/dashboard.component';\r\nimport {HttpClientModule} from \"@angular/common/http\";\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    MainComponent,\r\n    DashboardComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    FormsModule,\r\n    HttpClientModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nconst routes: Routes = [];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {BackendApisService} from \"../backend-apis.service\";\r\nimport {Subject} from \"rxjs\";\r\n\r\n@Component({\r\n  selector: 'app-main',\r\n  templateUrl: './main.component.html',\r\n  styleUrls: ['./main.component.css']\r\n})\r\nexport class MainComponent implements OnInit {\r\n\r\n  rows = []\r\n  name:string = ''\r\n  visible = true;\r\n\r\n  nameSub:any;\r\n\r\n  constructor(private backendApisService:BackendApisService) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.nameSub = this.nameSubscription()\r\n  }\r\n\r\n  nameSubscription(){\r\n    return this.backendApisService.responseUpdated.subscribe((res: string) => {\r\n      this.name = res\r\n      console.log(res)\r\n    })\r\n  }\r\n\r\n  twitterPressed(): void {\r\n\r\n    console.log(\"I'm about to call Twitter API\")\r\n\r\n    this.backendApisService.getTwitterAPI()\r\n\r\n    console.log(\"I called it\")\r\n  }\r\n\r\n  redditPressed(): void {\r\n\r\n    console.log(\"I'm about to call the Reddit backend code\")\r\n\r\n    this.backendApisService.getRedditAPI()\r\n\r\n    console.log(\"I called it\")\r\n  }\r\n\r\n}\r\n","<!DOCTYPE html>\r\n<html>\r\n<head>\r\n  <link rel=\"stylesheet\" href=\"main.component.css\">\r\n</head>\r\n<body>\r\n\r\n  <h1>SundayMail4U</h1>\r\n\r\n  <div class=\"centerButton\">\r\n    <button id=\"twitter\" (click)=\"twitterPressed()\">Twitter</button>\r\n    <button id=\"reddit\" (click)=\"redditPressed()\">Reddit</button>\r\n  </div>\r\n</body>\r\n</html>\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}